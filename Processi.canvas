{
	"nodes":[
		{"id":"481bb096721761a9","type":"group","x":-3480,"y":-3760,"width":5305,"height":3744,"label":"Processi"},
		{"id":"4170b3029615ce03","type":"group","x":-9796,"y":-6620,"width":5203,"height":1720,"label":"Threads"},
		{"id":"8a732ed1bddc4e08","type":"group","x":-9273,"y":-1640,"width":4680,"height":2309,"label":"Scheduling"},
		{"id":"4c591f1a9ee01dfe","type":"text","text":"Modulo utente","x":-9968,"y":-3174,"width":250,"height":60},
		{"id":"c65a48bf05cbff29","type":"text","text":"Granulosità\n---\nSe ad un processo viene dato un. \nDare a determinati utenti una particolare gestione di accessi.\n**Audit trail:** registrazione di tutte le attività orientate alla protezione","x":-10071,"y":-3019,"width":323,"height":340},
		{"id":"a6fb62c54214268c","type":"text","text":"Sistemi di protezione","x":-10035,"y":-3873,"width":259,"height":54},
		{"id":"821ca7ebe54d3695","type":"text","text":"1. Velocizzazione\n2. Condivisione di informazioni\n3. Modularità","x":-2900,"y":-3061,"width":250,"height":156},
		{"id":"9e42a53afb5d0579","type":"text","text":"Role-based Access Control\n--\nGli accessi vengono definiti in base alla categoria a cui l'utente appartiene","x":-4240,"y":-3840,"width":376,"height":236},
		{"id":"195e19e7344b68bf","type":"text","text":"Difesa in profondità\n--\n","x":-4240,"y":-3560,"width":376,"height":236},
		{"id":"7de10b4ae9984021","type":"text","text":"Buffer: oggetto che può essere riempito dal produttore e svuotato dal consumatore","x":-3010,"y":-1713,"width":250,"height":117},
		{"id":"029d655e1ecba527","type":"text","text":"Problema del produttore/consumatore","x":-3000,"y":-2000,"width":250,"height":88},
		{"id":"f8ad629b10ba9909","type":"text","text":"Utilizza due chiamate di sistema principali\n1. Send(message)\n2. Receive(message\nIl parametro message può avere lunghezza predefinita o variabile","x":-2139,"y":-1696,"width":289,"height":289},
		{"id":"e8e9e028f61ed0da","type":"text","text":"Sistema batch -> Esegue \"job\"\nSistema time-sharing -> Esegue \"task\"","x":-2490,"y":-3061,"width":380,"height":128},
		{"id":"bb0eb1266d648b3f","type":"text","text":"**Process Block Control (PBC):** struttura dati di un processo in esecuzione.\nContiene le seguenti informazioni:\n1. Stato del processo\n2. Numero del processo (PID)\n3. Contatore di programma\n4. Registri\n5. Limite di memoria\n6. Elenco file aperti","x":-1412,"y":-2089,"width":335,"height":370},
		{"id":"d94a1b6cb901f586","type":"text","text":"PID: Process Identifier, codice che identifica univocamente un processo.","x":-920,"y":-1995,"width":250,"height":182},
		{"id":"e817f0c8fddba6f3","type":"text","text":"Firmware (BIOS/UEFI)","x":1365,"y":-3410,"width":440,"height":359},
		{"id":"36958ba8c60aec1d","type":"text","text":"Boot del SO\n1. Un software noto come \"bootstrap\" o \"bootloader\" individua il kernel (UEFI, BIOS).\n2. Il kernel viene caricato in memoria e avviato.\n3. Il kernel inizializza l'hardware\n4. Il file system principale (root file system) viene montato.","x":853,"y":-2947,"width":360,"height":342},
		{"id":"215470879603c21e","type":"text","text":"Approfondimento sul Bootstrap","x":1405,"y":-2977,"width":250,"height":60},
		{"id":"a2f404ee288e89c1","type":"text","text":"Realizzazione fisica\n(memoria condivisa, bus, reti)","x":-1177,"y":-1659,"width":394,"height":108},
		{"id":"632acb990f15f8b9","type":"text","text":"Il buffer è pieno quando ((in + 1) % Buffer_size) == out\n\nin è la prima posizione libera, più 1,  ultima posizione","x":-3386,"y":-632,"width":250,"height":152},
		{"id":"b586374bdaf92e54","type":"text","text":"Concetto di processo padre e processo figlio\nOgni processo figlio può, a sua volta, essere processo padre di più processi figli contemporaneamente","x":-1990,"y":-3357,"width":250,"height":267},
		{"id":"7feeeea16f55b642","type":"text","text":"Il meccanismo di scambio di dati tra processi cooperanti è detto IPC (Interprocess Communication)","x":-3127,"y":-2720,"width":455,"height":160},
		{"id":"8a8345cfb32b5481","type":"text","text":"Ambiente: processo nel quale viene eseguito a sua volta un altro processo","x":-347,"y":-2900,"width":373,"height":88},
		{"id":"bbe88951b19efd00","type":"text","text":"Modello a memoria condivisa.\nUtilizza un area di memoria allocata\n\nPro: Velocità\nContro: Difficoltà di implementazione","x":-2410,"y":-2089,"width":360,"height":249},
		{"id":"7953eafe2f89e0ac","type":"text","text":"Un processo può essere dipendente o cooperante. ","x":-2210,"y":-2460,"width":360,"height":220},
		{"id":"a02d2c78b6b95c65","type":"text","text":"Modello a scambio di messaggi\n- Utile in ambienti distribuiti dove più sistemi sono interconnessi attraverso una rete.","x":-2010,"y":-2089,"width":370,"height":249},
		{"id":"c55adb54676d2e90","type":"text","text":"Una mailbox può essere associata a due o più processi.","x":39,"y":-686,"width":250,"height":175},
		{"id":"c47b9839c4e71e5a","type":"text","text":"Diagramma di transizione","x":-631,"y":-2196,"width":250,"height":60},
		{"id":"b36ff5361e49ec8d","type":"text","text":"## Comunicazione diretta\nIl processo deve indicare esplicitamente il mittente o ricevente del messaggio\n```\nsend(P, messaggio), invia messaggio al processo P;\n\nreceive(Q, messaggio), riceve messaggio dal processo Q.\n```","x":-468,"y":-1486,"width":387,"height":362},
		{"id":"9f456891d4fa0b74","type":"text","text":"Può essere indipendente dal processo padre\n","x":-1160,"y":-3740,"width":250,"height":58},
		{"id":"b8e81b92c204dafe","type":"text","text":"1. Nuovo\n2. In esecuzione (Running)\n3. Attesa (Waiting)\n4. Pronto (Ready)\n5. Terminato","x":-670,"y":-2668,"width":323,"height":265},
		{"id":"091f6a79f216b723","type":"text","text":"Processo figlio","x":-1619,"y":-3623,"width":250,"height":60},
		{"id":"b74a83aefcba254d","type":"text","text":"","x":-1166,"y":-3501,"width":250,"height":60},
		{"id":"7163fc08cb8b896e","type":"text","text":"Può accedere alla stessa memoria ","x":-1160,"y":-3623,"width":250,"height":60},
		{"id":"fa39d04b3f21c05b","type":"text","text":"","x":-795,"y":-3357,"width":250,"height":267},
		{"id":"5df65c54e26ee57d","type":"text","text":"Un processo è una sequenza strutturata di operazioni (input/output, algoritmi, ecc...).\nQuando viene caricato in memoria, un programma diventa processo, del quale possono essere eseguite diverse istanze","x":-1455,"y":-2640,"width":420,"height":237},
		{"id":"24d2876ae83a6780","type":"text","text":"Bootloader (Grub)","x":1525,"y":-3310,"width":260,"height":240},
		{"id":"b110f2a2aa79e788","type":"text","text":"Tasto \"Power On\"","x":910,"y":-3375,"width":250,"height":60},
		{"id":"b958d7473c8d7a11","type":"text","text":"Libreria livello utente\n---\nTutte le strutture dati sono confinate a livello utente\n- Le chiamate di sistema vengono quindi sostituite da chiamate locali.","x":-2811,"y":-5056,"width":421,"height":229},
		{"id":"f49b6d1b4977a65d","type":"text","text":"Invio:\nIl processo mittente invia il messaggio e continua la propria esecuzione","x":-1301,"y":-609,"width":250,"height":177},
		{"id":"b7c4242acd1fd7c1","type":"text","text":"Processo cooperante","x":-2900,"y":-3121,"width":250,"height":58},
		{"id":"e059b3413db74d8d","type":"text","text":"Processo indipendente","x":-3180,"y":-3121,"width":250,"height":60},
		{"id":"c8e468359bed87a3","type":"text","text":"Kernel","x":1525,"y":-3230,"width":260,"height":143},
		{"id":"15d7568e2b96e232","type":"text","text":"Avvio del Firmware (BIOS/UEFI)","x":908,"y":-3159,"width":250,"height":60},
		{"id":"d898ae5e4aa66241","type":"text","text":"il buffer è un array circolare con due puntatori logici in e out","x":-3288,"y":-1118,"width":388,"height":58},
		{"id":"b1abbbaa714b575d","type":"text","text":"Invio:\nIl processo mittente attende che il ricevente legga il messaggio\n\n","x":-1930,"y":-609,"width":250,"height":60},
		{"id":"e0a4835f884ecefa","type":"text","text":"Il consumatore può dover attendere nuovi oggetti ma il produttore può produrne all'infinito","x":-2750,"y":-1360,"width":250,"height":149},
		{"id":"a856909a47c3e235","type":"text","text":"Mailbox di processo\n- Non ha vita autonoma, quando il processo che la possiede termina, la mailbox vine eliminata.\n","x":-222,"y":-346,"width":282,"height":310},
		{"id":"0c6645b8c91ad839","type":"text","text":"Restituendo un valore tra 0 e buffersize-1","x":-3260,"y":-409,"width":250,"height":60},
		{"id":"f76689225e5e7fdb","type":"text","text":"Ricezione:\nIl processo ricevente resta in attesa dell'invio del messaggio da parte del mittente","x":-1641,"y":-609,"width":250,"height":60},
		{"id":"7447551a02c5904e","type":"text","text":"Ricezione:\nIl processo ricevente attende un messaggio o un valore nullo","x":-1033,"y":-609,"width":250,"height":147},
		{"id":"1369d98eaabfdd9d","type":"text","text":"Implementazione semplificata\nProgrammazione di applicazioni utente difficile","x":-1825,"y":-1260,"width":250,"height":177},
		{"id":"3291e03cf6d66991","type":"text","text":"Mittente e ricevente devono nominarsi a vicenda","x":217,"y":-1446,"width":250,"height":128},
		{"id":"3b47382233bb068c","type":"text","text":"Mailbox","x":-399,"y":-541,"width":250,"height":60},
		{"id":"d3703fbf8e483174","type":"text","text":"Buffer illimitato","x":-2760,"y":-1501,"width":250,"height":60},
		{"id":"8d756e4997e71c28","type":"text","text":"Il consumatore dovrà attendere, quando il buffer è vuoto e il produttore deve attendere se il buffer è pieno","x":-3247,"y":-1385,"width":250,"height":174},
		{"id":"361a24c8750287e4","type":"text","text":"Buffer limitato","x":-3245,"y":-1501,"width":250,"height":60},
		{"id":"a730b7aae87a8bb1","type":"text","text":"Implementazione complessa\nProgrammazione di applicazioni utente semplificata","x":-2389,"y":-1260,"width":250,"height":177},
		{"id":"0d2bb84dc50b7dbd","type":"text","text":"IN = successiva posizione libera nel buffer","x":-3412,"y":-958,"width":250,"height":198},
		{"id":"b95a21dac5b65b45","type":"text","text":"","x":-3269,"y":-904,"width":250,"height":60},
		{"id":"bee8227b4a2916d5","type":"text","text":"Entrambi i casi sono svantaggiosi in quanto è necessario nominare il processo stesso. In caso in cui questo cambiasse di nome sarebbe un fottuto disastro.","x":857,"y":-1318,"width":395,"height":147},
		{"id":"594ad586a1f9c933","type":"text","text":"Il processo mittente deve nominare il processo ricevente","x":217,"y":-1171,"width":250,"height":125},
		{"id":"fa696c228809c207","type":"text","text":"Se due processi fanno riferimento alla stessa mailbox il canale di comunicazione è 1.","x":39,"y":-921,"width":250,"height":175},
		{"id":"bc43d19040c27600","type":"text","text":"- **Comunicazione diretta:** In questo caso, le code temporanee vengono utilizzate per **memorizzare temporaneamente i messaggi** in attesa che il processo di destinazione li riceva.\n- **Comunicazione indiretta:** Nelle IPC indirette, le code temporanee assumono un ruolo più cruciale. I messaggi vengono **inseriti nelle mailbox** del destinatario, che fungono da code temporanee. Il processo di destinazione li recupera dalla sua mailbox quando è pronto a riceverli.","x":330,"y":-695,"width":484,"height":369},
		{"id":"ae893043c0bcd5ed","type":"text","text":"Communicaition Link","x":-1658,"y":-1562,"width":250,"height":57},
		{"id":"d4a6c611ed7ff724","type":"text","text":"Se entrambe le system call sono bloccanti si parla di rendez vois","x":-1777,"y":-490,"width":250,"height":60},
		{"id":"d54b2e1fba0521e8","type":"text","text":"## Comunicazione sincrona","x":-1805,"y":-792,"width":272,"height":93},
		{"id":"4e47a3fab57e3b09","type":"text","text":"Mailbox di sistema\n- Ha vita autonoma\nOgni sistema operativo offre meccanismi per creare/rimuovere o inviare/ricevere una mailbox indipendente.","x":-643,"y":-346,"width":281,"height":310},
		{"id":"f093d4e592bfd95b","type":"text","text":"","x":-3175,"y":1421,"width":250,"height":60},
		{"id":"21c21a00017ccceb","type":"text","text":"Il buffer è vuoto quando in == out","x":-3247,"y":-720,"width":250,"height":60},
		{"id":"f0e6c09284776a80","type":"text","text":"OUT prima posizione occupata nel buffer","x":-3033,"y":-968,"width":250,"height":208},
		{"id":"6b7b4febc1986eb6","type":"text","text":"## Comunicazione asincrona","x":-1194,"y":-793,"width":286,"height":94},
		{"id":"f457e224a9252613","type":"text","text":"## Comunicazione indiretta\nI processi comunicano attraverso una porta o \"mailbox\"\n```\nsend(A, messaggio), invia messaggio alla mailbox A;\n\nreceive(A, messaggio), riceve un messaggio dalla mailbox A.\n```\n","x":-468,"y":-1026,"width":387,"height":380},
		{"id":"fb17afe649f9bdf3","type":"text","text":"Realizzazione concettuale\n- Comunicazione diretta o indiretta.\n- Comunicazione sincrona o asincrona.\n- Gestione automatica o esplicita del buffer. ","x":-1244,"y":-1382,"width":334,"height":285},
		{"id":"619b02f09a35abd4","type":"text","text":"Scheduling\n--\nMeccanismo fondamentale alla base della multi-programmazione.\n- **Sistema mono-processore:** si attende la completa esecuzione di un processo per poterne eseguire un altro;\n- **Sistema multi-programmato:** durante la fase di attesa di un processo (es. attesa per un processo di input/output), l'algoritmo di scheduling rimuove al processo il controllo sulla CPU, permettendo ad altri processi di essere eseguiti; ","x":-7373,"y":-720,"width":560,"height":384},
		{"id":"1e7eae260b4f2786","type":"text","text":"Decide quale processo nella *ready queue* deve ottenere il controllo sulla CPU","x":-7217,"y":-984,"width":250,"height":118},
		{"id":"904f2cac2b9bf418","type":"text","text":"Scheduling non Preemptive\n---\nNel caso dello scheduling senza prelazione, quando si assegna la cpu a un processo, questo rimane in possesso della cpu fino al momento del suo rilascio, dovuto al termine dell’esecuzione o al passaggio nello stato di attesa.\n\n--\n- Si passa da un processo all'altro\n- Può portare a *Race Condition*: un secondo processo può tentare di leggere i dati che sono stati lasciati in uno stato incoerente dal primo processo\n","x":-8008,"y":-205,"width":507,"height":212},
		{"id":"ca4e69cfd0a374d6","type":"text","text":"### Scheduling in ordine di arrivo","x":-6600,"y":-915,"width":250,"height":71},
		{"id":"51b7d7d4ea6f7007","type":"text","text":"### Scheduling con priorità","x":-6600,"y":-202,"width":250,"height":71},
		{"id":"931ca461cc3fe0a8","type":"text","text":"Sequenza di un processo\n--\nUn processo durante la sua fase di esecuzione alterna due fasi:\n1. **CPU burst:** ciclo di elaborazione svolto dalla CPU;\n2. **I/O burst:** attesa di terminazione delle operazioni di I/O;","x":-6160,"y":241,"width":391,"height":370},
		{"id":"0ad701dd17288c8d","type":"text","text":"Varie sequenze di operazioni piuttosto brevi.","x":-4888,"y":534,"width":250,"height":87},
		{"id":"4263c921559d2223","type":"text","text":"Meccanismo di attivazione\n--\nIl processo di scheduling si attiva se si verifica una delle quattro condizioni\n1. Un processo passa dallo stato di esecuzione allo stato di attesa;\n2. Un processo passa dallo stato di attesa allo stato di pronto (termine fase di I/O);\n3. Un processo passa dallo stato di esecuzione allo stato di pronto (interrupt);\n4. Il processo termina; ","x":-8315,"y":-720,"width":560,"height":384},
		{"id":"d0c4a5e27b7dac66","type":"text","text":"### Scheduling shortest-job-first","x":-6600,"y":-661,"width":250,"height":71},
		{"id":"e5ebe8c111d93538","type":"text","text":"### Scheduling circolare","x":-6600,"y":-430,"width":250,"height":71},
		{"id":"2ff2d812a504e413","type":"file","file":"Scheduling.md","x":-10652,"y":-1755,"width":745,"height":1124},
		{"id":"8b87bfe465dc4222","type":"text","text":"Processi","x":-10280,"y":-202,"width":250,"height":281},
		{"id":"760595235b3eb24b","type":"text","text":"Latenza di dispatch","x":-9065,"y":-174,"width":250,"height":60},
		{"id":"10392cc4111f6baf","type":"text","text":"Dispatcher\n--\nModulo che si occupa passare il controllo della CPU da un processo ad un altro.\nPoiché il cambio di contesto è molto frequente (verifica con comando vmstat) il dispatcher dovrebbe essere molto veloce","x":-9196,"y":-631,"width":520,"height":206},
		{"id":"6b2036d5f1d9f5b9","type":"text","text":"Con il comando `proc` posso vedere quanti cambi di contesto sono stati fatti ad un processo dato il suo PID","x":-9196,"y":-840,"width":520,"height":140},
		{"id":"97fd9c7d5cf7bb97","type":"text","text":"Multi thread\nMulti processore\nMulti programmazione","x":-4378,"y":-1035,"width":250,"height":135},
		{"id":"6d556dfa5f803142","type":"text","text":"Software","x":-9628,"y":-3683,"width":250,"height":60},
		{"id":"72e681e3de31324a","type":"text","text":"Se il processo richiede una ingente quantità di risorse, il sistema effettua il checkpointing da cui può recuperare le risorse","x":-8286,"y":-2518,"width":250,"height":296},
		{"id":"d5f187618304ab3b","type":"text","text":"\n\\","x":-8692,"y":-2326,"width":250,"height":148},
		{"id":"4ce0a01d7a8307bf","type":"text","text":"Eliminare a caso i processi bloccati e vedere se il deadlock è ancora presente oppure no. ","x":-9097,"y":-2518,"width":250,"height":148},
		{"id":"a1925b1effa60131","type":"text","text":"Detection & Recovery\n---\nViene utilizzato un grafo di allocazone delle risorse\nIl sistema operativo controlla periodicamente la presenza di un dedlock e termina forzatamente i processi bloccati. \n","x":-8765,"y":-3026,"width":396,"height":298},
		{"id":"ed7627c6636cd260","type":"text","text":"Ignorare il problema\n---\n- Accadeva nelle vecchie versione di Linux. 100 processi massimi, 9 processi, 12 processi figli (108).\n- In questo caso il deadlock viene gestito con un'attesa.\n- Rilevarli e gestirli può essere costoso. ","x":-9297,"y":-3026,"width":400,"height":298},
		{"id":"2fa2499802a429b7","type":"text","text":"MOdulo sistema opeartivo","x":-10866,"y":-3174,"width":250,"height":60},
		{"id":"fbcb2bdb570a99a7","type":"text","text":"Principio di minimo privileegio\n---\nAi programmi vengono ceduti i privilegi minimi e essenziali per poter svolgere i compiti necessari. \nI permessi possono essere statici oppure modificati nel cambio di dominio\nCompartimentazione: il processo riceve dei processi specifici per accedere ad una determinata parte della memoria.","x":-10808,"y":-3019,"width":517,"height":340},
		{"id":"a6642b53268a5277","type":"text","text":"Hardware\n--\nRilevazione degli errori\n- Hardware di indirizzamento (MMU): il processo può eseguire solo in un proprio spazio di indirizzi.\n- L'I/O system impedisce ai processi l'accesso a determinati dispositivi.","x":-10468,"y":-3683,"width":354,"height":312},
		{"id":"10e24e53b4588a24","type":"text","text":"Threading sincrono (fork-join)\n--\n- Thread genitore aspetta che ogni thread figlio termini la propria esecuzione;\n- Thread figli eseguono operazioni in maniera concorrente, al termine della task eseguono il join;\n- Condivisione dati significativa;","x":-4071,"y":-6723,"width":440,"height":462},
		{"id":"e7760d0e45ad8686","type":"text","text":"Libreria livello kernel\n--\n- Tutte le strutture dati vengono generalmente supportate dal sistema operativo.\n- Una chiamata di funzione si traduce in una chiamata di sistema.","x":-3771,"y":-5077,"width":421,"height":243},
		{"id":"f3c667f9a04d7d83","type":"text","text":"Threading asincrono\n--\n- Il thread genitore genera un thread figlio, poi continua la sua esecuzioen in maniera concorrenziale;\n- Il thread genitore non deve necessariamente sapere quando l'esecuzione del thread figlio termina;\n- Ogni thread figlio viene eseguito in maniera indipendente;","x":-2551,"y":-6737,"width":520,"height":496},
		{"id":"fe9fec4b609a1b90","type":"text","text":"Creazione di una tread\n--\nDue strategie principali: \n1. Threading sincrono\n2. Threading asincrono","x":-3290,"y":-6723,"width":395,"height":469},
		{"id":"a74699bf6ae7f7c4","type":"text","text":"Librerie di Thread\n--\nSono raccolte di API che permettono al programmatore di creare e gestire con semplicità le thread.\n\n**Esempi:**\n- Pthreads (Linux)\n-  Windows\n- Java","x":-3290,"y":-6057,"width":393,"height":330},
		{"id":"e5daa8d43748c83e","type":"text","text":"Implementazione\n--\nEsistono due modi per implementare una libreria thread\n1. Libreria livello kernel\n2. Libreria livello utente","x":-3248,"y":-5557,"width":308,"height":288},
		{"id":"c0c1fc22e8bc65cc","type":"text","text":"Svolge un solo compito alla volta","x":-9420,"y":-5772,"width":250,"height":60},
		{"id":"29863d64415ee2b4","type":"text","text":"$$\\text{Incremento di velocità} \\leq \\dfrac{1}{0,25+\\dfrac{1-0,25}{2}}(=1,6)$$\nIn percentuale ho un aumento del 60% in quanto 1,6 - 1 dove 1 è il risultato della legge di Amdhal calcolata con un solo core, è uguale a 0,6 che in percentuale è uguale a 60%","x":-5150,"y":-6288,"width":537,"height":334},
		{"id":"5d599239caf1884d","type":"text","text":"Misura il guadagno potenziale in termine di prestazione se viene aggiunto un core \n$$\\text{Incremento di velocità} \\leq \\dfrac{1}{S+\\dfrac{1-S}{N}}$$\nDove S è la porzione del processo che viene eseguita in serie e N è il numero di core","x":-5710,"y":-6288,"width":360,"height":334},
		{"id":"10f84ccbb3ca4623","type":"text","text":"- Nel caso di UNIX il dominio è l'id UTENTE. Innalzando temporaneamente il livello di privilegio si può accedere ad operazioni particolari come il cambio della password\n- Su Android il dominio è gestito a livello applicativo","x":-4646,"y":-3840,"width":371,"height":236},
		{"id":"309166c7f3d84b85","type":"text","text":"Alcune informazioni sono protetet da chiave, definita dal produttore della CPU, che permette un accesso ancora più avanzato non disponibile a livello ROOT","x":-4646,"y":-3560,"width":371,"height":236},
		{"id":"856d5cfe532bc8ad","type":"text","text":"Deadlock\n---\nCondizioni di Coffman, necessarie a verificarsi del Deadlock, non sufficienti:\n1. **Mutua esclusione:**\n2. **Possesso e attesa:** processo autorizzato a chiedere risorse anche se ne posseggono altre.\n3. **Assenza di revoca:** le risorse non possono essere sottratte a dei processi che non le rilasciano spontaneamente.\n4. **Attesa circolare:** un processo è bloccato in attesa di una risorsa posseduta da un altro processo della catena, il quale è a sua volta in attesa da un altro processo a sua volta.\n\nSe anche solo una di queste condizioni non si verifica allora non c'è il deadlock","x":-8531,"y":-3817,"width":620,"height":476},
		{"id":"0adcb2c8938a9760","type":"text","text":"Struttura modulare","x":-5285,"y":-2760,"width":250,"height":60},
		{"id":"6f3f3ed6f17506b6","type":"text","text":"Struttura microkernel","x":-5285,"y":-2640,"width":250,"height":60},
		{"id":"0550571ab8680112","type":"text","text":"Struttura ibrida","x":-5285,"y":-2520,"width":250,"height":60},
		{"id":"d65b7cd62ac482e1","type":"text","text":"La CPU deve essere più attiva possibile. Idealmente dovrebbe lavorare in un range dal 40% al 90%","x":-8433,"y":-1348,"width":250,"height":147},
		{"id":"c722c87c971ce539","type":"text","text":"Scheduling Preemptive\n--\nQuando un processo prende il controllo della CPU, non lo perde fino alla fine della sua esecuzione o al passaggio allo stato di attesa.","x":-8568,"y":-205,"width":507,"height":175},
		{"id":"92074807cd8a11ea","type":"text","text":"Tempo di risposta tra la effettuazione di una richiesta e la risposta indotta","x":-8308,"y":-1455,"width":250,"height":60},
		{"id":"5077e506575eb131","type":"text","text":"Sistema con un miglior","x":-8463,"y":-1631,"width":250,"height":60},
		{"id":"ebbdd4fbbfbdcb9d","type":"text","text":"Prevenzione dinamica\n---\nSi applica a livello di esecuzione\n- Se il processo chiede troppe risorse il SO valuta un possibile stallo in base alle risorse richieste in quel deterinato momento","x":-8197,"y":-3030,"width":322,"height":340},
		{"id":"b1cf4697dbceed14","type":"text","text":"Prevenzione statica\n---\n\nNegare una delle 4 condizioni di Coffman/Havender\n1. Negare la mutua esclusione: non posso farlo se le risorse non sono condivisibili\n\nDare ordine ai semafori di rilasciare la wait (da vedere)\n","x":-7671,"y":-3030,"width":500,"height":301},
		{"id":"51b38aea9a50b023","type":"text","text":"Struttura monolitica","x":-5285,"y":-2887,"width":250,"height":60},
		{"id":"642d96cd6f1cf328","type":"text","text":"Incrocio","x":-7605,"y":-3609,"width":250,"height":60},
		{"id":"041bc0e8a0d91429","type":"file","file":"Allegati/Screenshot 2024-05-06 alle 16.26.06.png","x":-6666,"y":-3495,"width":400,"height":297},
		{"id":"20cfab366956794a","type":"text","text":"Semafori\n--\nIn ambiente globale il semaforo è una ottima soluzione per gestire la sincronizzazione tra i processi.\n","x":-5951,"y":-3857,"width":467,"height":260},
		{"id":"8617cb51df59516c","type":"text","text":"Il ciclo di elaborazione svolto da una CPU disegna una curva esponenziale o iper-esponenziale.","x":-5620,"y":292,"width":250,"height":242},
		{"id":"807c212ed81dca8c","type":"text","text":"Ready queue\n--\nCoda i quali elementi sono rappresentati dai Process Control Block (PCB), si può realizzare come una coda fifo, una coda lifo, un albero o con una lista concatenata non ordinata. ","x":-7293,"y":341,"width":400,"height":236},
		{"id":"89bdf55900eaf815","type":"text","text":"Molte sequenze di elaborazione ma di breve durata.","x":-4900,"y":191,"width":250,"height":94},
		{"id":"917ab8ae962f13ac","type":"text","text":"Scheduler della CPU\n--\nQuando la CPU passa ad uno stato di inattività lo scheduler preleva il primo processo disponibile dalla coda FIFO dei processi detta *Ready queue*","x":-7313,"y":-12,"width":440,"height":176},
		{"id":"94e3c3c672f4b641","type":"text","text":"Tempo di attesa nella ready queue","x":-8005,"y":-1455,"width":250,"height":58},
		{"id":"b38bc3ee8b4a88a3","type":"text","text":"Tempo di completamento: intervallo tra la sottomissione del processo al suo effettivo completamento","x":-7880,"y":-1348,"width":250,"height":147},
		{"id":"5127f66ea194d748","type":"text","text":"Throughput: numero di processi completati in una unità di tempo","x":-8160,"y":-1348,"width":250,"height":87},
		{"id":"b9c411f69db801fd","type":"text","text":"Determinate classi di processi possono beneficiare di diversi tipi di algoritmi di scheduling","x":-8160,"y":-1060,"width":250,"height":118},
		{"id":"ac9002cf8ff39773","type":"text","text":"Algoritmo del Banchiere (Dijkstra)\n---\nIpotesi:\n1. Sia noto per ogni processo il numero massimo di risorse per tutta la sua durata\n2. Studio del caso peggiore: processo che chiede tutte le risorse in una volta e continua a disporne fino alla sua morte.\n3. Valutazione di uno stato \"salvo\" in cui il deadlock non si va a verificare. \n> Non adatto a sistemi dinamici, in cui il numero di processi varia di molto.","x":-7711,"y":-2449,"width":645,"height":394},
		{"id":"b76146af10ba8a3b","type":"text","text":"","x":-9363,"y":-2361,"width":250,"height":60},
		{"id":"2b05845996d37167","type":"text","text":"Parrallelismo","x":-7818,"y":-5149,"width":250,"height":229},
		{"id":"b9f8f03c2798a371","type":"text","text":"$$\\left[\\begin{array}{ccc}1&1&1\\\\4&3&-1\\\\3&5&3\\end{array}\\right]$$","x":-7700,"y":-4400,"width":404,"height":314},
		{"id":"685073543fcae5e2","type":"text","text":"Concorrenza: supporto di più task ma una esecuzione alla volta in maniera concorrenziale","x":-7330,"y":-5150,"width":250,"height":230},
		{"id":"3b4d63f8b29ba147","type":"text","text":"Grafo di allocazione delle risorse","x":-9071,"y":-4117,"width":250,"height":58},
		{"id":"d76c7a8c7a1dd2a0","type":"text","text":"Dominio di protezione\nSpazio concettuale dove opera un processo","x":-4240,"y":-4120,"width":376,"height":236},
		{"id":"e8d73817ac99c90e","type":"text","text":"Paradigma più usato","x":-8531,"y":-5600,"width":250,"height":60},
		{"id":"5012fb2553c0ff13","type":"text","text":"Multithread Process\n","x":-8920,"y":-5600,"width":250,"height":60},
		{"id":"d5dfbc694015b301","type":"text","text":"Heavyweight Process","x":-9420,"y":-5600,"width":250,"height":60},
		{"id":"32aab3d4af62ff25","type":"text","text":"Multi-programmazione: paradigma che permette l'utilizzo più efficiente dei core di una cpu, permettendo l'esecuzione di più task in parallelo, su ogni core","x":-7658,"y":-5673,"width":342,"height":206},
		{"id":"c71a129e3f863644","type":"text","text":"DAC\n--\nControllo di accesso discrezionale, chi ha i permessi li assegna e li rimuove\nControllo obbligatorio degli accessi MAC\nEtichette assegnate agli oggetti e ai soggetti compresi i procesi","x":-4646,"y":-4120,"width":371,"height":236},
		{"id":"65f93440aa781346","type":"text","text":"Livello utente\n---\nNon riceve supporto dal kernel","x":-9776,"y":-5240,"width":250,"height":184},
		{"id":"a6b08717cdba8de7","type":"text","text":"Thread: Unità di base di elaborazione della CPU.","x":-9170,"y":-5460,"width":250,"height":118},
		{"id":"536198a4322d62f8","type":"text","text":"Ogni thread contiente:\n- thread id\n- program counter\n- registri\n- stack","x":-9170,"y":-5240,"width":250,"height":240},
		{"id":"87a7301010d60d97","type":"text","text":"Livello Kernel\n---\nPuò eseguire ogni tipo di operazione","x":-9776,"y":-5497,"width":250,"height":155},
		{"id":"a05a9af6cd7d01fe","type":"text","text":"Dei dati: I thread eseguono le stesse operazione su tutti i core, sui quali vengono \"distribuiti i dati\"","x":-6838,"y":-5638,"width":250,"height":193},
		{"id":"2bf99945491ae713","type":"text","text":"Parallelismo","x":-6586,"y":-5782,"width":250,"height":60},
		{"id":"fb477ada4bbb047f","type":"text","text":"Se aggiungo un core al mio sistema, di quanto aumentano le prestazioni?","x":-6870,"y":-6180,"width":250,"height":147},
		{"id":"58cf4bb574c5edb5","type":"text","text":"Se N tende ad infinito l'incremento di velocità divenenta minore o uguale a $1/S$ il che dimostara come indipendentemente dal numero di core aggiunti, esso sia limitato dalla percentuale di processi eseguiti in serie","x":-5730,"y":-5674,"width":400,"height":237},
		{"id":"2a31d89d2a637491","type":"text","text":"Legge di Amdhal","x":-6461,"y":-6147,"width":250,"height":60},
		{"id":"59f94c06aa282865","type":"text","text":"","x":-6448,"y":-5942,"width":250,"height":60},
		{"id":"96040a8ddd431797","type":"text","text":"Perché è meglio?:\n- Integrazione\n- Comunicazione\n- Scalabilità\n- Consumo energetico","x":-7175,"y":-5602,"width":250,"height":210},
		{"id":"243ea9c05c16910d","type":"text","text":"Necessità di potenza di calcolo","x":-7612,"y":-6209,"width":250,"height":58},
		{"id":"a3c9a624d8cd4294","type":"text","text":"Algoritmi di Scheduling: servono a distribuire in maniera efficace il carico di lavoro sui sistemi multicore","x":-6925,"y":-6600,"width":411,"height":235},
		{"id":"72823a5f0d35154c","type":"text","text":"Sistema multi-core","x":-7350,"y":-5940,"width":250,"height":60},
		{"id":"a1a7067b584aaaa9","type":"text","text":"Esegue più compiti in maniera \"concorrenziale\"","x":-8920,"y":-5800,"width":250,"height":88},
		{"id":"2bd4e32e3415dcca","type":"text","text":"Esempio di vecchi webserver:\nPer gestire le richeiste provenienti da più client, veniva impiegata la creazione di più processi per gestire le domande. Il problema è che la creazione di un nuovo processo è molto onerosa, motivo per cui si preferisce utilizzare i thread","x":-8278,"y":-6557,"width":488,"height":377},
		{"id":"ae70a10b2acf1e9c","type":"file","file":"Allegati/Silby_2018_4-01.png","x":-9302,"y":-6120,"width":514,"height":285},
		{"id":"0ff07f0d2dce1866","type":"text","text":"Sistema mutli-CPU","x":-7880,"y":-5940,"width":250,"height":60},
		{"id":"26f33ddf2dceb0f2","type":"text","text":"Delle attività: Ogni core ha un thread che si occupa di svolgere attività diverse su quelli che possono essere gli stessi dati","x":-6359,"y":-5638,"width":333,"height":193}
	],
	"edges":[
		{"id":"c39c1b8d8bbf8bef","fromNode":"5df65c54e26ee57d","fromSide":"top","toNode":"b586374bdaf92e54","toSide":"bottom","label":"Creazione di un processo"},
		{"id":"16e3ba47243c765c","fromNode":"5df65c54e26ee57d","fromSide":"top","toNode":"fa39d04b3f21c05b","toSide":"bottom","label":"Rimozione di un processo"},
		{"id":"3e989a956dcb1ad8","fromNode":"5df65c54e26ee57d","fromSide":"bottom","toNode":"bb0eb1266d648b3f","toSide":"top","label":"Rappresentazione di un processo"},
		{"id":"19498edf175362ca","fromNode":"b586374bdaf92e54","fromSide":"top","toNode":"091f6a79f216b723","toSide":"left"},
		{"id":"04c9d89cce044b20","fromNode":"091f6a79f216b723","fromSide":"right","toNode":"9f456891d4fa0b74","toSide":"left"},
		{"id":"35b6e9c339783395","fromNode":"091f6a79f216b723","fromSide":"right","toNode":"7163fc08cb8b896e","toSide":"left"},
		{"id":"a9f4acfab1f9bcb7","fromNode":"091f6a79f216b723","fromSide":"right","toNode":"b74a83aefcba254d","toSide":"left"},
		{"id":"3728081a3b247a3f","fromNode":"5df65c54e26ee57d","fromSide":"right","toNode":"b8e81b92c204dafe","toSide":"left","label":"Stati di un processo"},
		{"id":"85cc29fefff9922c","fromNode":"b8e81b92c204dafe","fromSide":"bottom","toNode":"c47b9839c4e71e5a","toSide":"top"},
		{"id":"88de12cc4b82d95e","fromNode":"bb0eb1266d648b3f","fromSide":"right","toNode":"d94a1b6cb901f586","toSide":"left"},
		{"id":"b47bf05e2ee29fc6","fromNode":"5df65c54e26ee57d","fromSide":"left","toNode":"7953eafe2f89e0ac","toSide":"right","label":"Comunicazione tra processi"},
		{"id":"7c3d8be3962c1c84","fromNode":"7953eafe2f89e0ac","fromSide":"bottom","toNode":"bbe88951b19efd00","toSide":"top"},
		{"id":"113962051a7d2d6a","fromNode":"7953eafe2f89e0ac","fromSide":"bottom","toNode":"a02d2c78b6b95c65","toSide":"top"},
		{"id":"c823fa1e79783842","fromNode":"b7c4242acd1fd7c1","fromSide":"bottom","toNode":"821ca7ebe54d3695","toSide":"top","label":"Vantaggi"},
		{"id":"adecabb2751a6a25","fromNode":"a02d2c78b6b95c65","fromSide":"bottom","toNode":"f8ad629b10ba9909","toSide":"top"},
		{"id":"8ee9234fabdaac7e","fromNode":"f8ad629b10ba9909","fromSide":"bottom","toNode":"a730b7aae87a8bb1","toSide":"top","label":"Lunghezza fissa"},
		{"id":"125a7ce0dcdc81fd","fromNode":"f8ad629b10ba9909","fromSide":"bottom","toNode":"1369d98eaabfdd9d","toSide":"top","label":"Lunghezza variabile"},
		{"id":"903269c1a19e0793","fromNode":"f8ad629b10ba9909","fromSide":"right","toNode":"ae893043c0bcd5ed","toSide":"left"},
		{"id":"9bc57f69e9ebee19","fromNode":"ae893043c0bcd5ed","fromSide":"right","toNode":"a2f404ee288e89c1","toSide":"left"},
		{"id":"9163074beb6b7ce1","fromNode":"36958ba8c60aec1d","fromSide":"right","toNode":"215470879603c21e","toSide":"left"},
		{"id":"43a2d79f83c4783e","fromNode":"b110f2a2aa79e788","fromSide":"bottom","toNode":"15d7568e2b96e232","toSide":"top"},
		{"id":"315a9429b78bba93","fromNode":"b36ff5361e49ec8d","fromSide":"right","toNode":"3291e03cf6d66991","toSide":"left","label":"Simmetrica"},
		{"id":"8638799f7d832c90","fromNode":"b36ff5361e49ec8d","fromSide":"right","toNode":"594ad586a1f9c933","toSide":"left","label":"Asimmetrica"},
		{"id":"d899f26a8402cce8","fromNode":"3291e03cf6d66991","fromSide":"right","toNode":"bee8227b4a2916d5","toSide":"left"},
		{"id":"d9d3cd76add33370","fromNode":"594ad586a1f9c933","fromSide":"right","toNode":"bee8227b4a2916d5","toSide":"left"},
		{"id":"7a8949075301098b","fromNode":"f457e224a9252613","fromSide":"right","toNode":"fa696c228809c207","toSide":"left"},
		{"id":"5bd77fbd6fa5bbaf","fromNode":"f457e224a9252613","fromSide":"right","toNode":"c55adb54676d2e90","toSide":"left"},
		{"id":"07210ecda74721d6","fromNode":"f457e224a9252613","fromSide":"bottom","toNode":"3b47382233bb068c","toSide":"top"},
		{"id":"1ca5ea4358f64e28","fromNode":"3b47382233bb068c","fromSide":"bottom","toNode":"4e47a3fab57e3b09","toSide":"top"},
		{"id":"2daadf03e2e576ba","fromNode":"3b47382233bb068c","fromSide":"bottom","toNode":"a856909a47c3e235","toSide":"top"},
		{"id":"a8bcf6fddbbb43f3","fromNode":"ae893043c0bcd5ed","fromSide":"right","toNode":"fb17afe649f9bdf3","toSide":"left"},
		{"id":"63d5580f4bcbf3e4","fromNode":"fb17afe649f9bdf3","fromSide":"right","toNode":"b36ff5361e49ec8d","toSide":"left"},
		{"id":"fa66bc8510e12a59","fromNode":"fb17afe649f9bdf3","fromSide":"right","toNode":"f457e224a9252613","toSide":"left"},
		{"id":"e6bb8e92872da099","fromNode":"fb17afe649f9bdf3","fromSide":"bottom","toNode":"d54b2e1fba0521e8","toSide":"top"},
		{"id":"6cf37ce01c0a1556","fromNode":"fb17afe649f9bdf3","fromSide":"bottom","toNode":"6b7b4febc1986eb6","toSide":"top"},
		{"id":"3caf33f036a363a7","fromNode":"d54b2e1fba0521e8","fromSide":"bottom","toNode":"b1abbbaa714b575d","toSide":"top"},
		{"id":"d90f01593608170d","fromNode":"d54b2e1fba0521e8","fromSide":"bottom","toNode":"f76689225e5e7fdb","toSide":"top"},
		{"id":"62db5f511cf2a77f","fromNode":"6b7b4febc1986eb6","fromSide":"bottom","toNode":"f49b6d1b4977a65d","toSide":"top"},
		{"id":"76ea463926451a4d","fromNode":"6b7b4febc1986eb6","fromSide":"bottom","toNode":"7447551a02c5904e","toSide":"top"},
		{"id":"188ead865c85ebe6","fromNode":"619b02f09a35abd4","fromSide":"bottom","toNode":"917ab8ae962f13ac","toSide":"top","label":"Da cosa è eseguito?"},
		{"id":"d28646c8db228a66","fromNode":"931ca461cc3fe0a8","fromSide":"right","toNode":"8617cb51df59516c","toSide":"left"},
		{"id":"5642f814dffea8d7","fromNode":"8617cb51df59516c","fromSide":"right","toNode":"89bdf55900eaf815","toSide":"left","label":"Processo I/O bound"},
		{"id":"7dfe02d57901e60c","fromNode":"8617cb51df59516c","fromSide":"right","toNode":"0ad701dd17288c8d","toSide":"left","label":"Processo CPU bound"},
		{"id":"fd361d6789625931","fromNode":"917ab8ae962f13ac","fromSide":"bottom","toNode":"807c212ed81dca8c","toSide":"top","label":"Approfondimento"},
		{"id":"aea19a3e95c3ce80","fromNode":"a6b08717cdba8de7","fromSide":"bottom","toNode":"536198a4322d62f8","toSide":"top"},
		{"id":"3bb3386d76086bee","fromNode":"a6b08717cdba8de7","fromSide":"top","toNode":"d5dfbc694015b301","toSide":"bottom"},
		{"id":"e4d2ef5166442e91","fromNode":"a6b08717cdba8de7","fromSide":"top","toNode":"5012fb2553c0ff13","toSide":"bottom"},
		{"id":"e4874514de1d21d8","fromNode":"a6b08717cdba8de7","fromSide":"left","toNode":"87a7301010d60d97","toSide":"right"},
		{"id":"77dff657ef0617d8","fromNode":"a6b08717cdba8de7","fromSide":"left","toNode":"65f93440aa781346","toSide":"right"},
		{"id":"3f607a253b7eeb8f","fromNode":"5012fb2553c0ff13","fromSide":"top","toNode":"a1a7067b584aaaa9","toSide":"bottom"},
		{"id":"9578befb62e436c1","fromNode":"5012fb2553c0ff13","fromSide":"right","toNode":"e8d73817ac99c90e","toSide":"left"},
		{"id":"032f33a357f26f96","fromNode":"d5dfbc694015b301","fromSide":"top","toNode":"c0c1fc22e8bc65cc","toSide":"bottom"},
		{"id":"57445c2e33c6af50","fromNode":"243ea9c05c16910d","fromSide":"bottom","toNode":"0ff07f0d2dce1866","toSide":"top"},
		{"id":"e03257ad145fff77","fromNode":"243ea9c05c16910d","fromSide":"bottom","toNode":"72823a5f0d35154c","toSide":"top"},
		{"id":"b268c5eb9ef09596","fromNode":"0ff07f0d2dce1866","fromSide":"bottom","toNode":"32aab3d4af62ff25","toSide":"top"},
		{"id":"794ff5a6fbafbc5e","fromNode":"72823a5f0d35154c","fromSide":"bottom","toNode":"96040a8ddd431797","toSide":"top"},
		{"id":"3ea9244b8b452c37","fromNode":"72823a5f0d35154c","fromSide":"bottom","toNode":"32aab3d4af62ff25","toSide":"top"},
		{"id":"f31a9f3e93330d48","fromNode":"72823a5f0d35154c","fromSide":"right","toNode":"fb477ada4bbb047f","toSide":"left"},
		{"id":"53371bec0909dc7d","fromNode":"72823a5f0d35154c","fromSide":"right","toNode":"a3c9a624d8cd4294","toSide":"left"},
		{"id":"02c7ea3600a24ff3","fromNode":"72823a5f0d35154c","fromSide":"right","toNode":"2bf99945491ae713","toSide":"left"},
		{"id":"2f1e5162296cf256","fromNode":"32aab3d4af62ff25","fromSide":"bottom","toNode":"2b05845996d37167","toSide":"top"},
		{"id":"12b2b217f428f08e","fromNode":"32aab3d4af62ff25","fromSide":"bottom","toNode":"685073543fcae5e2","toSide":"top"},
		{"id":"edfa4092636c1348","fromNode":"fb477ada4bbb047f","fromSide":"right","toNode":"2a31d89d2a637491","toSide":"left"},
		{"id":"61d2f796679a8217","fromNode":"fb477ada4bbb047f","fromSide":"right","toNode":"59f94c06aa282865","toSide":"left"},
		{"id":"3e93cdbf47151a51","fromNode":"2a31d89d2a637491","fromSide":"right","toNode":"5d599239caf1884d","toSide":"left","label":"Make the common case fast"},
		{"id":"5287dd8e20f51948","fromNode":"5d599239caf1884d","fromSide":"right","toNode":"29863d64415ee2b4","toSide":"left"},
		{"id":"eb5730906d42114f","fromNode":"5d599239caf1884d","fromSide":"bottom","toNode":"58cf4bb574c5edb5","toSide":"top","label":"N tende ad infinito"},
		{"id":"300c6f59e4ca893d","fromNode":"2bf99945491ae713","fromSide":"bottom","toNode":"a05a9af6cd7d01fe","toSide":"top"},
		{"id":"01a728fe6830b447","fromNode":"2bf99945491ae713","fromSide":"bottom","toNode":"26f33ddf2dceb0f2","toSide":"top"},
		{"id":"7370d4001f18f7e7","fromNode":"856d5cfe532bc8ad","fromSide":"right","toNode":"642d96cd6f1cf328","toSide":"left","label":"Analogia"},
		{"id":"b9f5398298e3f569","fromNode":"856d5cfe532bc8ad","fromSide":"bottom","toNode":"ed7627c6636cd260","toSide":"top"},
		{"id":"046df2a76f1b56ca","fromNode":"856d5cfe532bc8ad","fromSide":"bottom","toNode":"a1925b1effa60131","toSide":"top"},
		{"id":"52f9569e8ffcb045","fromNode":"856d5cfe532bc8ad","fromSide":"bottom","toNode":"ebbdd4fbbfbdcb9d","toSide":"top"},
		{"id":"1b849ce2c619748e","fromNode":"856d5cfe532bc8ad","fromSide":"bottom","toNode":"b1cf4697dbceed14","toSide":"top"},
		{"id":"7e21e13a7b60e383","fromNode":"a1925b1effa60131","fromSide":"bottom","toNode":"4ce0a01d7a8307bf","toSide":"top","label":"Quali processi terminare?"},
		{"id":"7f16dd6c17a0a02a","fromNode":"a1925b1effa60131","fromSide":"bottom","toNode":"72e681e3de31324a","toSide":"top","label":"Checkpointing"},
		{"id":"aec118b92f88698e","fromNode":"a1925b1effa60131","fromSide":"bottom","toNode":"d5f187618304ab3b","toSide":"top","label":"Sottrarre risorse ad un processo"},
		{"id":"f0792ff8457bfac2","fromNode":"ebbdd4fbbfbdcb9d","fromSide":"right","toNode":"ac9002cf8ff39773","toSide":"left"},
		{"id":"c001b59d52bd77b3","fromNode":"a6fb62c54214268c","fromSide":"bottom","toNode":"a6642b53268a5277","toSide":"top"},
		{"id":"236b480326ff9ed1","fromNode":"a6fb62c54214268c","fromSide":"bottom","toNode":"6d556dfa5f803142","toSide":"top"},
		{"id":"a255f93e937e8588","fromNode":"a6642b53268a5277","fromSide":"bottom","toNode":"2fa2499802a429b7","toSide":"top"},
		{"id":"327ee555b7864553","fromNode":"a6642b53268a5277","fromSide":"bottom","toNode":"4c591f1a9ee01dfe","toSide":"top"},
		{"id":"9c8fbb4978fad3cf","fromNode":"2fa2499802a429b7","fromSide":"right","toNode":"4c591f1a9ee01dfe","toSide":"left","label":"Come passo da una mode all'altra"},
		{"id":"f17a2092b0ba4a05","fromNode":"4c591f1a9ee01dfe","fromSide":"left","toNode":"2fa2499802a429b7","toSide":"right"},
		{"id":"ac182d22b1f93207","fromNode":"e5daa8d43748c83e","fromSide":"bottom","toNode":"e7760d0e45ad8686","toSide":"top","label":"Libreria livello Kernel"},
		{"id":"a312b9a418c951d5","fromNode":"e5daa8d43748c83e","fromSide":"bottom","toNode":"b958d7473c8d7a11","toSide":"top","label":"Libreria livello utente"},
		{"id":"2d9033939d69c024","fromNode":"a74699bf6ae7f7c4","fromSide":"bottom","toNode":"e5daa8d43748c83e","toSide":"top","label":"Come implementarle?"},
		{"id":"7ec47fa72c8efa2d","fromNode":"a74699bf6ae7f7c4","fromSide":"top","toNode":"fe9fec4b609a1b90","toSide":"bottom","label":"Come creare una thread"},
		{"id":"60ee634fb3bf3ae4","fromNode":"fe9fec4b609a1b90","fromSide":"right","toNode":"f3c667f9a04d7d83","toSide":"left"},
		{"id":"1a13bc0a21646e19","fromNode":"fe9fec4b609a1b90","fromSide":"left","toNode":"10e24e53b4588a24","toSide":"right"},
		{"id":"04f0fe5fc6b25b6d","fromNode":"619b02f09a35abd4","fromSide":"left","toNode":"4263c921559d2223","toSide":"right"},
		{"id":"4aeb80db069e299b","fromNode":"4263c921559d2223","fromSide":"bottom","toNode":"904f2cac2b9bf418","toSide":"top","label":"Caso 1-4"},
		{"id":"331abfd923c759a6","fromNode":"4263c921559d2223","fromSide":"bottom","toNode":"c722c87c971ce539","toSide":"top","label":"Caso 2-3"},
		{"id":"2f60874e3b8e937c","fromNode":"4263c921559d2223","fromSide":"left","toNode":"10392cc4111f6baf","toSide":"right"},
		{"id":"a2d5c4974434563e","fromNode":"10392cc4111f6baf","fromSide":"bottom","toNode":"760595235b3eb24b","toSide":"top","label":"Quanto tempo ci impiega?"},
		{"id":"0a03c6cf556c07d1","fromNode":"10392cc4111f6baf","fromSide":"top","toNode":"6b2036d5f1d9f5b9","toSide":"bottom"},
		{"id":"4d5c04c33be06081","fromNode":"4263c921559d2223","fromSide":"top","toNode":"b9c411f69db801fd","toSide":"bottom"},
		{"id":"ae368641349da68d","fromNode":"b9c411f69db801fd","fromSide":"top","toNode":"d65b7cd62ac482e1","toSide":"bottom"},
		{"id":"17ed110a5c81a424","fromNode":"b9c411f69db801fd","fromSide":"top","toNode":"5127f66ea194d748","toSide":"bottom"},
		{"id":"f6e69a2cb6fc81b5","fromNode":"b9c411f69db801fd","fromSide":"top","toNode":"b38bc3ee8b4a88a3","toSide":"bottom"},
		{"id":"98e39f5a2f1af8e6","fromNode":"b9c411f69db801fd","fromSide":"top","toNode":"94e3c3c672f4b641","toSide":"bottom"},
		{"id":"f2ff9cb30b7373c7","fromNode":"b9c411f69db801fd","fromSide":"top","toNode":"92074807cd8a11ea","toSide":"bottom"},
		{"id":"85a71317fb17f491","fromNode":"619b02f09a35abd4","fromSide":"top","toNode":"1e7eae260b4f2786","toSide":"bottom"},
		{"id":"cf1f273e7ffb864b","fromNode":"619b02f09a35abd4","fromSide":"right","toNode":"ca4e69cfd0a374d6","toSide":"left"},
		{"id":"1ab4585ffd31e537","fromNode":"619b02f09a35abd4","fromSide":"right","toNode":"d0c4a5e27b7dac66","toSide":"left"},
		{"id":"6f56953297246965","fromNode":"619b02f09a35abd4","fromSide":"right","toNode":"e5ebe8c111d93538","toSide":"left"},
		{"id":"57c84fa0c68cecf7","fromNode":"619b02f09a35abd4","fromSide":"right","toNode":"51b7d7d4ea6f7007","toSide":"left"},
		{"id":"347d863f925798a2","fromNode":"bbe88951b19efd00","fromSide":"left","toNode":"029d655e1ecba527","toSide":"right"},
		{"id":"7ab95b18e0c4e97a","fromNode":"029d655e1ecba527","fromSide":"bottom","toNode":"7de10b4ae9984021","toSide":"top"},
		{"id":"806839bf9116950d","fromNode":"7de10b4ae9984021","fromSide":"bottom","toNode":"361a24c8750287e4","toSide":"top"},
		{"id":"f4921d111000602d","fromNode":"7de10b4ae9984021","fromSide":"bottom","toNode":"d3703fbf8e483174","toSide":"top"},
		{"id":"b7ab7e9de6c6f9bc","fromNode":"d3703fbf8e483174","fromSide":"bottom","toNode":"e0a4835f884ecefa","toSide":"top"},
		{"id":"33c41dcb0c2b7e5b","fromNode":"361a24c8750287e4","fromSide":"bottom","toNode":"8d756e4997e71c28","toSide":"top"},
		{"id":"b7c31a445d35cd17","fromNode":"8d756e4997e71c28","fromSide":"bottom","toNode":"d898ae5e4aa66241","toSide":"top"},
		{"id":"57b948a87fc49e38","fromNode":"d898ae5e4aa66241","fromSide":"bottom","toNode":"0d2bb84dc50b7dbd","toSide":"top"},
		{"id":"8ea99f7c924a4696","fromNode":"d898ae5e4aa66241","fromSide":"bottom","toNode":"f0e6c09284776a80","toSide":"top"}
	]
}